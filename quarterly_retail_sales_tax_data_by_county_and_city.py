# -*- coding: utf-8 -*-
"""Quarterly_Retail_Sales_Tax_Data_by_County_and_City.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rdWJUxQFWJZTF-ZGbiOVsvQP0Xg1KVJ5
"""

import argparse
import os
import re
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from datetime import datetime
import plotly.express as px
import seaborn as sns

from google.colab import drive
drive.mount('/content/drive')

df = pd.read_csv("/content/drive/MyDrive/Colab Notebooks/Quarterly_Retail_Sales_Tax_Data_by_County_and_City.csv")
df

print(df.head())

print("Shape dataset:", df.shape)

print(df.info())

print("Check Missing values:")
print(df.isnull().sum())

"""# Fiscal Year (Tahun Fiskal)"""

print("\nJumlah data per Fiscal Year:")
print(df['Fiscal Year'].value_counts().sort_index())

df['Fiscal Year'].value_counts().sort_index().plot(kind='bar', figsize=(6,4), title="Jumlah Data per Fiscal Year")
plt.show()

"""# Quarter Ending (Periode Kuartal)"""

print("\nDistribusi Quarter Ending:")
print(df['Quarter Ending'].value_counts())

df['Quarter Ending'].value_counts().plot(kind='bar', figsize=(10,4), title="Distribusi Quarter Ending")
plt.show()

# 5. County_Number
print("\nJumlah unik County_Number:", df['County_Number'].nunique())

# 6. County (Nama Kabupaten)
print("\nTop 10 County berdasarkan jumlah data:")
print(df['County'].value_counts().head(10))

df['County'].value_counts().head(10).plot(kind='bar', figsize=(6,4), title="Top 10 County Berdasarkan Jumlah Data")
plt.show()

# 7. City (Kota)
print("\nJumlah kota unik:", df['City'].nunique())
print("Contoh kota:", df['City'].dropna().unique()[:10])

# 8. Number of Returns (Jumlah laporan pajak)
print("\nStatistik Number of Returns:")
print(df['Number of Returns'].describe())

df['Number of Returns'].hist(bins=30, figsize=(6,4))
plt.title("Distribusi Number of Returns")
plt.show()

# 9. Taxable Sales (Penjualan Kena Pajak)
print("\nStatistik Taxable Sales:")
print(df['Taxable Sales'].describe())

df['Taxable Sales'].hist(bins=30, figsize=(6,4))
plt.title("Distribusi Taxable Sales")
plt.show()

# 10. Computed Tax (Pajak Terhitung)
print("\nStatistik Computed Tax:")
print(df['Computed Tax'].describe())

df['Computed Tax'].hist(bins=30, figsize=(6,4))
plt.title("Distribusi Computed Tax")
plt.show()

# 11. Percent of Tax (Persentase Pajak)
print("\nStatistik Percent of Tax:")
print(df['Percent of Tax'].describe())

df['Percent of Tax'].hist(bins=30, figsize=(6,4))
plt.title("Distribusi Percent of Tax")
plt.show()

# 12. FIPS County Code
print("\nJumlah unik FIPS County Code:", df['FIPS County Code'].nunique())

# 13. Primary Lat Dec & Long Dec
print("\nCek koordinat geografis (Lat, Long):")
print(df[['Primary Lat Dec', 'Primary Long Dec']].describe())

# 14. County Primary Point
print("\nDistribusi County Primary Point:")
print(df['County Primary Point'].value_counts().head())

# 13. Primary Lat Dec & Long Dec
print("\nCek koordinat geografis (Lat, Long):")
print(df[['Primary Lat Dec', 'Primary Long Dec']].describe())

# 14. County Primary Point
print("\nDistribusi County Primary Point:")
print(df['County Primary Point'].value_counts().head())

# 1. Analisis tren pajak penjualan dari tahun ke tahun
# -------------------------------------------------
tax_trend = df.groupby("Fiscal Year")["Computed Tax"].sum().reset_index()

plt.figure(figsize=(8,6))
sns.lineplot(x="Fiscal Year", y="Computed Tax", data=tax_trend, marker="o")
plt.title("Tren Pajak Penjualan per Tahun")
plt.ylabel("Total Pajak (Computed Tax)")
plt.xlabel("Tahun Fiskal")
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

# 2. Perbandingan kontribusi pajak antar kota & county
# -------------------------------------------------
city_tax = df.groupby("City")["Computed Tax"].sum().reset_index().sort_values(by="Computed Tax", ascending=False).head(10)
county_tax = df.groupby("County")["Computed Tax"].sum().reset_index().sort_values(by="Computed Tax", ascending=False).head(10)

fig, axes = plt.subplots(1,2, figsize=(16,6))
sns.barplot(x="Computed Tax", y="City", data=city_tax, ax=axes[0], palette="Blues_r")
axes[0].set_title("Top 10 Kota - Kontribusi Pajak")

sns.barplot(x="Computed Tax", y="County", data=county_tax, ax=axes[1], palette="Greens_r")
axes[1].set_title("Top 10 County - Kontribusi Pajak")

plt.tight_layout()
plt.show()

# 3. Visualisasi peta distribusi pajak berdasarkan lokasi
# -------------------------------------------------
map_data = df.groupby(["County", "Primary Lat Dec", "Primary Long Dec"])["Computed Tax"].sum().reset_index()

fig = px.scatter_mapbox(
    map_data,
    lat="Primary Lat Dec",
    lon="Primary Long Dec",
    size="Computed Tax",
    color="Computed Tax",
    hover_name="County",
    hover_data={"Computed Tax": ":,.0f"},
    color_continuous_scale=px.colors.cyclical.IceFire,
    zoom=5,
    height=600
)

fig.update_layout(mapbox_style="open-street-map")
fig.update_layout(title="Distribusi Pajak Penjualan per County")
fig.show()

# 4. Hubungan antara Number of Returns, Taxable Sales, dan Computed Tax
# -------------------------------------------------
plt.figure(figsize=(10,6))
sns.scatterplot(
    x="Taxable Sales",
    y="Computed Tax",
    size="Number of Returns",
    hue="Number of Returns",
    data=df,
    alpha=0.6
)
plt.title("Hubungan Jumlah Laporan vs Penjualan & Pajak")
plt.xlabel("Taxable Sales")
plt.ylabel("Computed Tax")
plt.legend(title="Number of Returns", bbox_to_anchor=(1.05,1), loc="upper left")
plt.tight_layout()
plt.show()